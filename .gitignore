# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib60/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so shouldn't be committed.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# PEP 582; used by PDM, PEP 582 compatible tools and project workflow
__pypackages__/

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site/

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static analyzer
.pytype/

# Cython debug symbols
cython_debug/

# VS Code specific
.vscode/

# IDE - JetBrains
.idea/

# dotenv environment variables file
# Specific to backend to avoid accidentally committing a root .env if you create one
backend_api/.env

# Node.js / Frontend
frontend/node_modules/
frontend/dist/ # If your frontend has a build step that outputs to 'dist'
frontend/out/  # If your frontend has a build step that outputs to 'out'
frontend/.DS_Store
frontend/npm-debug.log*
frontend/yarn-debug.log*
frontend/yarn-error.log*
frontend/.eslintcache
frontend/.next/ # If using Next.js for frontend in the future
frontend/.svelte-kit/ # If using SvelteKit

# General OS files
.DS_Store
Thumbs.db

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Coverage
coverage/
.nyc_output/

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables (general, if you ever add one at root)
# .env # Already covered by the specific backend_api/.env and the general /ENV/ style entries

# Build output (generic, but good to have if not covered by specific frontend/backend ignores)
/build/
/dist/
/out/